<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//===Changing it to be random
cooldown = 60;
hp = 300;
global.enemies_in_room += 1; //adds to the global tracker for enemies in room on spawn


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Firing
cooldown -=1
p_x = obj_player.x; //creates variable for the player object's name
p_y = obj_player.y;

if (cooldown &lt;= 0)
{
bullet1 = instance_create(x, y, obj_new_enemy_bullet); //creates the bullet object
//===Don't use obj_trishit.x here as it makes it so they all look the same way rather than having it be instance based.
bullet1.direction = point_direction(x, y, p_x, p_y); // gets the player location and sets the bullet to fire at it
bullet1.image_angle = bullet1.direction; // aligns the image to match the direction of the bullet
//===Same logic here
image_angle = bullet1.image_angle;
bullet1.speed = 12; //sets how fast the bullet moves

bullet2 = instance_create(x, y, obj_new_enemy_bullet);
bullet2.direction = point_direction(x, y, p_x, p_y);
bullet2.direction +=30;
bullet2.image_angle = bullet2.direction;
bullet2.speed = 8;

bullet3 = instance_create(x, y, obj_new_enemy_bullet);
bullet3.direction = point_direction(x, y, p_x, p_y);
bullet3.direction -=30;
bullet3.image_angle = bullet3.direction;
bullet3.speed = 8;
cooldown = 50;
//===Making cooldown rangom for funzie
//randomize(); //===Makes it different everytime.
//cooldown = random_range(40, 51); //===one higher because it takes the lowest number but 1 minus x2
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if (hp &lt;= 0)
{
    instance_destroy();
    global.enemies_in_room -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
